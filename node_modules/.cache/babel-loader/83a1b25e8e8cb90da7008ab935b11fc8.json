{"ast":null,"code":"var _jsxFileName = \"/home/praharshitachelluri/Desktop/task 13/task_13/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar emojiDictionary = {\n  \"üòä\": \"smiling\",\n  \"üò≥\": \"disbelief\",\n  \"üòî\": \"sad\",\n  \"ü•°\": \"takeout box\",\n  \"‚ù§Ô∏è\": \"love\",\n  \"üòë\": \"annoyance\"\n};\nvar emojisWeKnow = Object.keys(emojiDictionary);\nexport default function App() {\n  _s();\n\n  const [meaning, setMeaning] = useState(\"\");\n\n  function emojiInputHandler(event) {\n    // processing\n    var userInput = event.target.value;\n    var meaning = emojiDictionary[userInput];\n\n    if (meaning === undefined) {\n      meaning = \"we don't have this in our database\";\n    }\n\n    setMeaning(meaning); // react call to show output\n  }\n\n  function emojiClickHandler(emoji) {\n    // processing\n    var meaning = emojiDictionary[emoji];\n    setMeaning(meaning); // react call to show output\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"inside outt!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: emojiInputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", meaning, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" emojis we know \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), emojisWeKnow.map(function (emoji) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => emojiClickHandler(emoji),\n        style: {\n          fontSize: \"2rem\",\n          padding: \"0.5rem\",\n          cursor: \"pointer\"\n        },\n        children: emoji\n      }, emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"D3EHYk/guY72sUVf/VpVxg+5wZI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/praharshitachelluri/Desktop/task 13/task_13/src/App.js"],"names":["useState","emojiDictionary","emojisWeKnow","Object","keys","App","meaning","setMeaning","emojiInputHandler","event","userInput","target","value","undefined","emojiClickHandler","emoji","map","fontSize","padding","cursor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAQ,WAAR;;AAEA,IAAIC,eAAe,GAAG;AACpB,QAAM,SADc;AAEpB,QAAM,WAFc;AAGpB,QAAM,KAHc;AAIpB,QAAM,aAJc;AAKpB,QAAM,MALc;AAMpB,QAAM;AANc,CAAtB;AASA,IAAIC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,eAAZ,CAAnB;AAEA,eAAe,SAASI,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASQ,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC;AACA,QAAIC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AAEA,QAAIN,OAAO,GAAGL,eAAe,CAACS,SAAD,CAA7B;;AAEA,QAAIJ,OAAO,KAAKO,SAAhB,EAA2B;AACzBP,MAAAA,OAAO,GAAG,oCAAV;AACD;;AACDC,IAAAA,UAAU,CAACD,OAAD,CAAV,CATgC,CASX;AACtB;;AAED,WAASQ,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC;AACA,QAAIT,OAAO,GAAGL,eAAe,CAACc,KAAD,CAA7B;AACAR,IAAAA,UAAU,CAACD,OAAD,CAAV,CAHgC,CAGX;AACtB;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,QAAQ,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA,sBAAMF,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASGJ,YAAY,CAACc,GAAb,CAAiB,UAAUD,KAAV,EAAiB;AACjC,0BACE;AACE,QAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACC,KAAD,CADlC;AAEE,QAAA,KAAK,EAAE;AAAEE,UAAAA,QAAQ,EAAE,MAAZ;AAAoBC,UAAAA,OAAO,EAAE,QAA7B;AAAuCC,UAAAA,MAAM,EAAE;AAA/C,SAFT;AAAA,kBAKGJ;AALH,SAGOA,KAHP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA3CuBV,G;;KAAAA,G","sourcesContent":["import { useState } from 'react';\nimport  \"./App.css\"\n\nvar emojiDictionary = {\n  \"üòä\": \"smiling\",\n  \"üò≥\": \"disbelief\",\n  \"üòî\": \"sad\",\n  \"ü•°\": \"takeout box\",\n  \"‚ù§Ô∏è\": \"love\",\n  \"üòë\": \"annoyance\"\n};\n\nvar emojisWeKnow = Object.keys(emojiDictionary);\n\nexport default function App() {\n  const [meaning, setMeaning] = useState(\"\");\n\n  function emojiInputHandler(event) {\n    // processing\n    var userInput = event.target.value;\n\n    var meaning = emojiDictionary[userInput];\n\n    if (meaning === undefined) {\n      meaning = \"we don't have this in our database\";\n    }\n    setMeaning(meaning); // react call to show output\n  }\n\n  function emojiClickHandler(emoji) {\n    // processing\n    var meaning = emojiDictionary[emoji];\n    setMeaning(meaning); // react call to show output\n  }\n  return (\n    <div className=\"App\">\n      <h1>inside outt!</h1>\n\n      <input onChange={emojiInputHandler} />\n\n      <h2> {meaning} </h2>\n      {/* Actual output set by React using useState */}\n\n      <h3> emojis we know </h3>\n      {emojisWeKnow.map(function (emoji) {\n        return (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n            key={emoji}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}